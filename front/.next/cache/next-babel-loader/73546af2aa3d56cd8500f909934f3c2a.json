{"ast":null,"code":"var _jsxFileName = \"/Users/gyeongmin/project/myRecipe/front/components/create/recipe.tsx\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React from \"react\";\nimport { useFieldArray } from \"react-hook-form\";\nimport * as style from '../../styles/createStyle';\nexport function Recipe({\n  register,\n  name,\n  control\n}) {\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: name\n  });\n  const addInput = e => {\n    e.preventDefault();\n    append({\n      recipe: ''\n    });\n  };\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, fields.map((field, idx) => __jsx(style.recipeWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, idx + 1), __jsx(style.InputWrapper, {\n    key: field.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(style.AnswerInput, _extends({\n    key: field.id,\n    placeholder: \"\\uB808\\uC2DC\\uD53C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n  }, register(`recipes.${idx}.recipe`, {\n    required: true\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  })), __jsx(style.DeleteInput, {\n    onClick: () => remove(idx),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"x\")))), __jsx(style.PlusInput, {\n    onClick: addInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"+\")));\n}","map":{"version":3,"names":["React","useFieldArray","style","Recipe","register","name","control","fields","append","remove","addInput","e","preventDefault","recipe","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","field","idx","recipeWrapper","className","InputWrapper","key","id","AnswerInput","_extends","placeholder","required","DeleteInput","onClick","PlusInput"],"sources":["/Users/gyeongmin/project/myRecipe/front/components/create/recipe.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useFieldArray } from \"react-hook-form\";\nimport * as style from '../../styles/createStyle';\nimport type { Prop } from './ingredient';\n\nexport function Recipe({ register, name, control }: Prop){\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: name,\n  });\n\n  const addInput = (e: any) => {\n    e.preventDefault();\n    append({ recipe: '' });\n  };\n\n  return(\n    <div>\n      {fields.map((field, idx) => (\n      <style.recipeWrapper>\n        <div className=\"index\">{idx+1}</div>\n        <style.InputWrapper key={field.id}>\n          <style.AnswerInput\n            key={field.id}\n            placeholder=\"레시피를 입력해주세요.\"\n            {...register(`recipes.${idx}.recipe`, {\n              required: true,\n            })}\n          />\n          <style.DeleteInput onClick={()=>remove(idx)}>x</style.DeleteInput>\n        </style.InputWrapper>\n      </style.recipeWrapper>\n    ))}\n    <style.PlusInput onClick={addInput}>\n      <div>+</div>\n    </style.PlusInput>\n    </div>\n  )\n}"],"mappings":";;;AAAA,OAAOA,KAAK,MAAuC,OAAO;AAC1D,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,KAAKC,KAAK,MAAM,0BAA0B;AAGjD,OAAO,SAASC,MAAMA,CAAC;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAc,CAAC,EAAC;EACvD,MAAM;IAAEC,MAAM;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAGR,aAAa,CAAC;IAC/CK,OAAO;IACPD,IAAI,EAAEA;EACR,CAAC,CAAC;EAEF,MAAMK,QAAQ,GAAIC,CAAM,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,MAAM,CAAC;MAAEK,MAAM,EAAE;IAAG,CAAC,CAAC;EACxB,CAAC;EAED,OACEC,KAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGb,MAAM,CAACc,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,KACvBT,KAAA,CAACZ,KAAK,CAACsB,aAAa;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClBN,KAAA;IAAKW,SAAS,EAAC,OAAO;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEG,GAAG,GAAC,CAAO,CAAC,EACpCT,KAAA,CAACZ,KAAK,CAACwB,YAAY;IAACC,GAAG,EAAEL,KAAK,CAACM,EAAG;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAChCN,KAAA,CAACZ,KAAK,CAAC2B,WAAW,EAAAC,QAAA;IAChBH,GAAG,EAAEL,KAAK,CAACM,EAAG;IACdG,WAAW,EAAC;EAAc,GACtB3B,QAAQ,CAAE,WAAUmB,GAAI,SAAQ,EAAE;IACpCS,QAAQ,EAAE;EACZ,CAAC,CAAC;IAAAjB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACH,CAAC,EACFN,KAAA,CAACZ,KAAK,CAAC+B,WAAW;IAACC,OAAO,EAAEA,CAAA,KAAIzB,MAAM,CAACc,GAAG,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,GAAoB,CAC/C,CACD,CACtB,CAAC,EACFN,KAAA,CAACZ,KAAK,CAACiC,SAAS;IAACD,OAAO,EAAExB,QAAS;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjCN,KAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,GAAM,CACI,CACZ,CAAC;AAEV"},"metadata":{},"sourceType":"module"}