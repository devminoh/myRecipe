{"ast":null,"code":"import shortId from 'shortid';\nimport { produce } from 'immer';\nimport { faker } from \"@faker-js/faker\";\nfaker.seed(123);\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: '',\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null\n};\nexport var generateDummyPost = function generateDummyPost(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: faker.internet.userName()\n      },\n      serve: 2,\n      category: '양식',\n      Ingredients: [{\n        name: faker.lorem.paragraph()\n      }, {\n        name: faker.lorem.paragraph()\n      }],\n      image: faker.image.url(),\n      Recipes: [{\n        recipe: faker.lorem.sentence()\n      }, {\n        recipe: faker.lorem.sentence()\n      }, {\n        recipe: faker.lorem.sentence()\n      }],\n      link: faker.lorem.sentence()\n    };\n  });\n};\n\n// initialState.mainPosts = initialState.mainPosts.concat(generateDummyPost(10));\nexport var LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport var LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport var LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    User: {\n      id: 1,\n      nickname: 'zerocho'\n    },\n    serve: data.serve,\n    category: data.category,\n    Ingredients: data.ingredients,\n    image: data.image,\n    Recipes: data.recipes,\n    link: 'https://www.10000recipe.com/recipe/6878480'\n  };\n};\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(dummyPost(action.data));\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      default:\n        return state;\n    }\n  });\n};\nexport default reducer;","map":{"version":3,"names":["shortId","produce","faker","seed","initialState","mainPosts","imagePaths","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","generateDummyPost","number","Array","fill","map","id","generate","User","nickname","internet","userName","serve","category","Ingredients","name","lorem","paragraph","image","url","Recipes","recipe","sentence","link","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","addPost","data","type","dummyPost","ingredients","recipes","reducer","state","arguments","length","undefined","action","draft","concat","error","unshift","filter","v"],"sources":["C:/Users/82109/Desktop/myRecipe/front/reducers/post.tsx"],"sourcesContent":["import shortId from 'shortid';\r\nimport { produce } from 'immer';\r\nimport { faker } from \"@faker-js/faker\";\r\nfaker.seed(123);\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: '',\r\n  hasMorePosts: true,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n}\r\n\r\nexport const generateDummyPost = (number: number) => Array(number).fill().map(()=> ({\r\n  id: shortId.generate(),\r\n  User: {\r\n    id: shortId.generate(),\r\n    nickname: faker.internet.userName(),\r\n  },\r\n  serve: 2,\r\n  category: '양식',\r\n  Ingredients: [{\r\n      name: faker.lorem.paragraph(),\r\n    },{\r\n      name: faker.lorem.paragraph(),\r\n    }],\r\n    image: faker.image.url(),\r\n    Recipes: [{\r\n      recipe: faker.lorem.sentence()\r\n    },{\r\n      recipe: faker.lorem.sentence()\r\n    },{\r\n      recipe: faker.lorem.sentence()\r\n    }],\r\n    link: faker.lorem.sentence()\r\n}));\r\n\r\n// initialState.mainPosts = initialState.mainPosts.concat(generateDummyPost(10));\r\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\r\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\r\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const addPost = (data: any)=>({\r\n  type: ADD_POST_REQUEST,\r\n  data\r\n})\r\n\r\nexport const dummyPost = (data:any)=>({\r\n  id: data.id,\r\n  User: {\r\n    id: 1,\r\n    nickname: 'zerocho',\r\n  },\r\n  serve: data.serve,\r\n  category: data.category,\r\n  Ingredients: data.ingredients,\r\n  image: data.image,\r\n  Recipes: data.recipes,\r\n  link: 'https://www.10000recipe.com/recipe/6878480'\r\n});\r\n\r\nconst reducer = (state=initialState, action:any) => {\r\n  return produce(state, (draft:any) => {\r\n    switch(action.type){\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.mainPosts = action.data.concat(draft.mainPosts);\r\n        draft.hasMorePosts = draft.mainPosts.length < 50;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(dummyPost(action.data));\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.mainPosts = draft.mainPosts.filter((v:any)=> v.id !== action.data);\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      default:\r\n        return state;\r\n    }\r\n  });\r\n\r\n};\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}