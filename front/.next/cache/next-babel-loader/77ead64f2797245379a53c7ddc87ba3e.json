{"ast":null,"code":"import { all, fork, takeLatest, put, delay } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport {\n// LOAD_POSTS_SUCCESS,\n// LOAD_POSTS_FAILURE,\n// LOAD_POSTS_REQUEST,\nADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST\n// REMOVE_POST_SUCCESS,\n// REMOVE_POST_FAILURE,\n// REMOVE_POST_REQUEST,\n// generateDummyPost,\n} from \"../reducers/post\";\n// import { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\nimport shortId from 'shortid';\n\n// loadPost\n// function loadPostsAPI(data) {\n//   return axios.get(\"/api/posts\", data);\n// }\n\n// function* loadPosts(action) {\n//   console.log(action);\n//   try{\n//     // const result = yield call(loadPostsAPI, action.data)\n//     yield delay(1000);\n//     const id = shortId.generate();\n//     yield put({\n//       type: LOAD_POSTS_SUCCESS,\n//       data: generateDummyPost(10),\n//     });\n//   } catch(err) {\n//     yield put({\n//       type: LOAD_POSTS_FAILURE,\n//       error: err.response.data,\n//     })\n//   }\n// }\n\n// addpost\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\nfunction* addPost(action) {\n  console.log(action);\n  try {\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data\n      }\n    });\n    // yield put({\n    //   type: ADD_POST_TO_ME,\n    //   data: id,\n    // })\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\n// removePost\n// function removePostAPI(data) {\n//   return axios.delete(\"/api/post\", data);\n// }\n\n// function* removePost(action) {\n//   try{\n//     // const result = yield call(removePostAPI, action.data)\n//     yield delay(1000);\n//     yield put({\n//       type: REMOVE_POST_SUCCESS,\n//       data: action.data,\n//     });\n//     yield put({\n//       type: REMOVE_POST_OF_ME,\n//       data: action.data,\n//     })\n//   } catch(err) {\n//     // console.error(err)\n//     yield put({\n//       type: REMOVE_POST_FAILURE,\n//       data: err.response.data,\n//     })\n//   }\n// }\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\n// function* watchLoadPosts() {\n//   yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n// }\n\n// function* watchRemovePost() {\n//   yield takeLatest(REMOVE_POST_REQUEST, removePost);\n// }\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)\n  // fork(watchLoadPosts), \n  // fork(watchRemovePost),\n  ]);\n}","map":{"version":3,"names":["all","fork","takeLatest","put","delay","axios","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","shortId","addPostAPI","data","post","addPost","action","console","log","id","generate","type","content","err","error","response","watchAddPost","postSaga"],"sources":["/Users/gyeongmin/project/myRecipe/front/sagas/post.tsx"],"sourcesContent":["import { all, fork, takeLatest, put, delay } from \"redux-saga/effects\";\nimport axios from 'axios';\nimport {\n  // LOAD_POSTS_SUCCESS,\n  // LOAD_POSTS_FAILURE,\n  // LOAD_POSTS_REQUEST,\n  ADD_POST_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  // REMOVE_POST_SUCCESS,\n  // REMOVE_POST_FAILURE,\n  // REMOVE_POST_REQUEST,\n  // generateDummyPost,\n} from \"../reducers/post\";\n// import { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\nimport shortId from 'shortid';\n\n// loadPost\n// function loadPostsAPI(data) {\n//   return axios.get(\"/api/posts\", data);\n// }\n\n// function* loadPosts(action) {\n//   console.log(action);\n//   try{\n//     // const result = yield call(loadPostsAPI, action.data)\n//     yield delay(1000);\n//     const id = shortId.generate();\n//     yield put({\n//       type: LOAD_POSTS_SUCCESS,\n//       data: generateDummyPost(10),\n//     });\n//   } catch(err) {\n//     yield put({\n//       type: LOAD_POSTS_FAILURE,\n//       error: err.response.data,\n//     })\n//   }\n// }\n\n// addpost\nfunction addPostAPI(data:any) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction* addPost(action:any) {\n  console.log(action);\n  try{\n    // const result = yield call(addPostAPI, action.data)\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        id,\n        content: action.data,\n      }\n    });\n    // yield put({\n    //   type: ADD_POST_TO_ME,\n    //   data: id,\n    // })\n  } catch(err:any) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data,\n    })\n  }\n}\n\n// removePost\n// function removePostAPI(data) {\n//   return axios.delete(\"/api/post\", data);\n// }\n\n// function* removePost(action) {\n//   try{\n//     // const result = yield call(removePostAPI, action.data)\n//     yield delay(1000);\n//     yield put({\n//       type: REMOVE_POST_SUCCESS,\n//       data: action.data,\n//     });\n//     yield put({\n//       type: REMOVE_POST_OF_ME,\n//       data: action.data,\n//     })\n//   } catch(err) {\n//     // console.error(err)\n//     yield put({\n//       type: REMOVE_POST_FAILURE,\n//       data: err.response.data,\n//     })\n//   }\n// }\n\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\n// function* watchLoadPosts() {\n//   yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n// }\n\n// function* watchRemovePost() {\n//   yield takeLatest(REMOVE_POST_REQUEST, removePost);\n// }\n\n\nexport default function* postSaga() {\n  yield all([\n    fork(watchAddPost), \n    // fork(watchLoadPosts), \n    // fork(watchRemovePost),\n  ]);\n}"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,UAAU,EAAEC,GAAG,EAAEC,KAAK,QAAQ,oBAAoB;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB;AACE;AACA;AACA;AACAC,gBAAgB,EAChBC,gBAAgB,EAChBC;AACA;AACA;AACA;AACA;AAAA,OACK,kBAAkB;AACzB;AACA,OAAOC,OAAO,MAAM,SAAS;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASC,UAAUA,CAACC,IAAQ,EAAE;EAC5B,OAAON,KAAK,CAACO,IAAI,CAAC,WAAW,EAAED,IAAI,CAAC;AACtC;AAEA,UAAUE,OAAOA,CAACC,MAAU,EAAE;EAC5BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,IAAG;IACD;IACA,MAAMV,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMa,EAAE,GAAGR,OAAO,CAACS,QAAQ,CAAC,CAAC;IAC7B,MAAMf,GAAG,CAAC;MACRgB,IAAI,EAAEb,gBAAgB;MACtBK,IAAI,EAAE;QACJM,EAAE;QACFG,OAAO,EAAEN,MAAM,CAACH;MAClB;IACF,CAAC,CAAC;IACF;IACA;IACA;IACA;EACF,CAAC,CAAC,OAAMU,GAAO,EAAE;IACf,MAAMlB,GAAG,CAAC;MACRgB,IAAI,EAAEZ,gBAAgB;MACtBe,KAAK,EAAED,GAAG,CAACE,QAAQ,CAACZ;IACtB,CAAC,CAAC;EACJ;AACF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,UAAUa,YAAYA,CAAA,EAAG;EACvB,MAAMtB,UAAU,CAACM,gBAAgB,EAAEK,OAAO,CAAC;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA,eAAe,UAAUY,QAAQA,CAAA,EAAG;EAClC,MAAMzB,GAAG,CAAC,CACRC,IAAI,CAACuB,YAAY;EACjB;EACA;EAAA,CACD,CAAC;AACJ"},"metadata":{},"sourceType":"module"}