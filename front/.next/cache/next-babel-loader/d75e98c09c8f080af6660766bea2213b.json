{"ast":null,"code":"// import { all, fork, call, takeLatest, put, delay } from 'redux-saga/effects';\n// import axios from 'axios';\n// import {\n//   LOG_IN_SUCCESS,\n//   LOG_OUT_SUCCESS,\n//   SIGN_UP_SUCCESS,\n//   FOLLOW_SUCCESS,\n//   UNFOLLOW_SUCCESS,\n//   LOG_IN_FAILURE,\n//   LOG_OUT_FAILURE,\n//   SIGN_UP_FAILURE,\n//   FOLLOW_FAILURE,\n//   UNFOLLOW_FAILURE,\n//   LOG_IN_REQUEST,\n//   LOG_OUT_REQUEST,\n//   SIGN_UP_REQUEST,\n//   FOLLOW_REQUEST,\n//   UNFOLLOW_REQUEST,\n// } from '../reducers/user';\n\n// // login\n// function logInAPI(data: any) {\n//   return axios.post('/api/login', data);\n// }\n\n// function* logIn(action: { data: any; }) {\n//   try {\n//     // const result = yield call(logInAPI, action.data);\n//     yield delay(1000);\n//     yield put({\n//       type: LOG_IN_SUCCESS,\n//       data: action.data,\n//       // data: result.data,\n//     });\n//   } catch (err:any) {\n//     yield put({\n//       type: LOG_IN_FAILURE,\n//       error: err.response.data,\n//     });\n//   }\n// }\n\n// //logout\n// function logOutAPI(data: any) {\n//   return axios.post('/api/logout', data);\n// }\n\n// function* logOut() {\n//   try {\n//     // const result = yield call(logOutAPI);\n//     yield delay(1000);\n//     yield put({\n//       type: LOG_OUT_SUCCESS,\n//       // data: result.data,\n//     });\n//   } catch (err:any) {\n//     yield put({\n//       type: LOG_OUT_FAILURE,\n//       error: err.response.data,\n//     });\n//   }\n// }\n\n// // signUp\n// function signUpAPI(data:any) {\n//   return axios.post('/api/signUp', data);\n// }\n\n// function* signUp() {\n//   try {\n//     // const result = yield call(signUpAPI);\n//     yield delay(1000);\n//     yield put({\n//       type: SIGN_UP_SUCCESS,\n//       // data: result.data,\n//     });\n//   } catch (err:any) {\n//     yield put({\n//       type: SIGN_UP_FAILURE,\n//       error: err.response.data,\n//     });\n//   }\n// }\n\n// // follow\n// // function followAPI(data:any) {\n// //   return axios.post('/api/follow', data);\n// // }\n\n// // function* follow(action:any) {\n// //   try {\n// //     // const result = yield call(followAPI);\n// //     yield delay(1000);\n// //     yield put({\n// //       type: FOLLOW_SUCCESS,\n// //       data: action.data,\n// //     });\n// //   } catch (err:any) {\n// //     yield put({\n// //       type: FOLLOW_FAILURE,\n// //       error: err.response.data,\n// //     });\n// //   }\n// // }\n\n// // unfollow\n// // function unfollowAPI(data:any) {\n// //   return axios.post('/api/unfollow', data);\n// // }\n\n// // function* unfollow(action:any) {\n// //   try {\n// //     // const result = yield call(unfollowAPI);\n// //     yield delay(1000);\n// //     yield put({\n// //       type: UNFOLLOW_SUCCESS,\n// //       data: action.data,\n// //     });\n// //   } catch (err:any) {\n// //     yield put({\n// //       type: UNFOLLOW_FAILURE,\n// //       error: err.response.data,\n// //     });\n// //   }\n// // }\n\n// // function* watchFollow() {\n// //   yield takeLatest(FOLLOW_REQUEST, follow);\n// // }\n// // function* watchUnfollow() {\n// //   yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n// // }\n\n// function* watchLogIn() {\n//   yield takeLatest(LOG_IN_REQUEST, logIn);\n// }\n\n// function* watchLogOut() {\n//   yield takeLatest(LOG_OUT_REQUEST, logOut);\n// }\n\n// function* watchSignUp() {\n//   yield takeLatest(SIGN_UP_REQUEST, signUp);\n// }\n\n// export default function* userSaga() {\n//   yield all([\n//     // fork(watchFollow),\n//     // fork(watchUnfollow),\n//     fork(watchLogIn),\n//     fork(watchLogOut),\n//     fork(watchSignUp),\n//   ]);\n// }","map":{"version":3,"names":[],"sources":["/Users/gyeongmin/project/myRecipe/front/sagas/user.tsx"],"sourcesContent":["// import { all, fork, call, takeLatest, put, delay } from 'redux-saga/effects';\n// import axios from 'axios';\n// import {\n//   LOG_IN_SUCCESS,\n//   LOG_OUT_SUCCESS,\n//   SIGN_UP_SUCCESS,\n//   FOLLOW_SUCCESS,\n//   UNFOLLOW_SUCCESS,\n//   LOG_IN_FAILURE,\n//   LOG_OUT_FAILURE,\n//   SIGN_UP_FAILURE,\n//   FOLLOW_FAILURE,\n//   UNFOLLOW_FAILURE,\n//   LOG_IN_REQUEST,\n//   LOG_OUT_REQUEST,\n//   SIGN_UP_REQUEST,\n//   FOLLOW_REQUEST,\n//   UNFOLLOW_REQUEST,\n// } from '../reducers/user';\n\n// // login\n// function logInAPI(data: any) {\n//   return axios.post('/api/login', data);\n// }\n\n// function* logIn(action: { data: any; }) {\n//   try {\n//     // const result = yield call(logInAPI, action.data);\n//     yield delay(1000);\n//     yield put({\n//       type: LOG_IN_SUCCESS,\n//       data: action.data,\n//       // data: result.data,\n//     });\n//   } catch (err:any) {\n//     yield put({\n//       type: LOG_IN_FAILURE,\n//       error: err.response.data,\n//     });\n//   }\n// }\n\n// //logout\n// function logOutAPI(data: any) {\n//   return axios.post('/api/logout', data);\n// }\n\n// function* logOut() {\n//   try {\n//     // const result = yield call(logOutAPI);\n//     yield delay(1000);\n//     yield put({\n//       type: LOG_OUT_SUCCESS,\n//       // data: result.data,\n//     });\n//   } catch (err:any) {\n//     yield put({\n//       type: LOG_OUT_FAILURE,\n//       error: err.response.data,\n//     });\n//   }\n// }\n\n// // signUp\n// function signUpAPI(data:any) {\n//   return axios.post('/api/signUp', data);\n// }\n\n// function* signUp() {\n//   try {\n//     // const result = yield call(signUpAPI);\n//     yield delay(1000);\n//     yield put({\n//       type: SIGN_UP_SUCCESS,\n//       // data: result.data,\n//     });\n//   } catch (err:any) {\n//     yield put({\n//       type: SIGN_UP_FAILURE,\n//       error: err.response.data,\n//     });\n//   }\n// }\n\n// // follow\n// // function followAPI(data:any) {\n// //   return axios.post('/api/follow', data);\n// // }\n\n// // function* follow(action:any) {\n// //   try {\n// //     // const result = yield call(followAPI);\n// //     yield delay(1000);\n// //     yield put({\n// //       type: FOLLOW_SUCCESS,\n// //       data: action.data,\n// //     });\n// //   } catch (err:any) {\n// //     yield put({\n// //       type: FOLLOW_FAILURE,\n// //       error: err.response.data,\n// //     });\n// //   }\n// // }\n\n// // unfollow\n// // function unfollowAPI(data:any) {\n// //   return axios.post('/api/unfollow', data);\n// // }\n\n// // function* unfollow(action:any) {\n// //   try {\n// //     // const result = yield call(unfollowAPI);\n// //     yield delay(1000);\n// //     yield put({\n// //       type: UNFOLLOW_SUCCESS,\n// //       data: action.data,\n// //     });\n// //   } catch (err:any) {\n// //     yield put({\n// //       type: UNFOLLOW_FAILURE,\n// //       error: err.response.data,\n// //     });\n// //   }\n// // }\n\n// // function* watchFollow() {\n// //   yield takeLatest(FOLLOW_REQUEST, follow);\n// // }\n// // function* watchUnfollow() {\n// //   yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n// // }\n\n// function* watchLogIn() {\n//   yield takeLatest(LOG_IN_REQUEST, logIn);\n// }\n\n// function* watchLogOut() {\n//   yield takeLatest(LOG_OUT_REQUEST, logOut);\n// }\n\n// function* watchSignUp() {\n//   yield takeLatest(SIGN_UP_REQUEST, signUp);\n// }\n\n// export default function* userSaga() {\n//   yield all([\n//     // fork(watchFollow),\n//     // fork(watchUnfollow),\n//     fork(watchLogIn),\n//     fork(watchLogOut),\n//     fork(watchSignUp),\n//   ]);\n// }\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script"}