{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    serve: 1,\n    category: '양식',\n    Ingredients: [{\n      name: '박력분 200g'\n    }, {\n      name: '계란 2알'\n    }],\n    image: 'https://src.hidoc.co.kr/image/lib/2020/11/9/1604911318873_0.jpg',\n    Recipes: [{\n      recipe: '1번 레시피'\n    }, {\n      recipe: '2번 레시피'\n    }, {\n      recipe: '3번 레시피'\n    }],\n    link: 'https://www.10000recipe.com/recipe/6895534'\n  }],\n  imagePaths: '',\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: false\n};\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    User: {\n      id: 1,\n      nickname: 'zerocho'\n    },\n    serve: data.serve,\n    category: data.category,\n    Ingredients: data.ingredients,\n    image: data.image,\n    Recipes: data.recipes,\n    link: 'https://www.10000recipe.com/recipe/6878480'\n  };\n};\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data)].concat(_toConsumableArray(state.mainPosts)),\n        addPostLoading: false,\n        addPostDone: true\n      });\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","mainPosts","id","User","nickname","serve","category","Ingredients","name","image","Recipes","recipe","link","imagePaths","addPostLoading","addPostDone","addPostError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","addPost","data","type","dummyPost","ingredients","recipes","reducer","state","arguments","length","undefined","action","_objectSpread","concat","_toConsumableArray","error"],"sources":["/Users/gyeongmin/project/myRecipe/front/reducers/post.tsx"],"sourcesContent":["import shortId from 'shortid';\n\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초',\n    },\n    serve: 1,\n    category: '양식',\n    Ingredients: [{\n      name: '박력분 200g'\n    },{\n      name: '계란 2알',\n    }],\n    image: 'https://src.hidoc.co.kr/image/lib/2020/11/9/1604911318873_0.jpg',\n    Recipes: [{\n      recipe: '1번 레시피'\n    },{\n      recipe: '2번 레시피'\n    },{\n      recipe: '3번 레시피'\n    }],\n    link: 'https://www.10000recipe.com/recipe/6895534'\n  }],\n  imagePaths: '',\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: false,\n}\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\n\nexport const addPost = (data: any)=>({\n  type: ADD_POST_REQUEST,\n  data\n})\n\nexport const dummyPost = (data:any)=>({\n  id: data.id,\n  User: {\n    id: 1,\n    nickname: 'zerocho',\n  },\n  serve: data.serve,\n  category: data.category,\n  Ingredients: data.ingredients,\n  image: data.image,\n  Recipes: data.recipes,\n  link: 'https://www.10000recipe.com/recipe/6878480'\n});\n\nconst reducer = (state=initialState, action:any) => {\n  switch(action.type){\n    case ADD_POST_REQUEST:\n      return {\n        ...state,\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null,\n      }\n    case ADD_POST_SUCCESS:\n      return {\n        ...state,\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\n        addPostLoading: false,\n        addPostDone: true,\n      }\n    case ADD_POST_FAILURE:\n      return {\n        ...state,\n        addPostLoading: false,\n        addPostError: action.error,\n      }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;"],"mappings":";;;;AAEA,OAAO,IAAMA,YAAY,GAAG;EAC1BC,SAAS,EAAE,CAAC;IACVC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE;MACJD,EAAE,EAAE,CAAC;MACLE,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE,IAAI;IACdC,WAAW,EAAE,CAAC;MACZC,IAAI,EAAE;IACR,CAAC,EAAC;MACAA,IAAI,EAAE;IACR,CAAC,CAAC;IACFC,KAAK,EAAE,iEAAiE;IACxEC,OAAO,EAAE,CAAC;MACRC,MAAM,EAAE;IACV,CAAC,EAAC;MACAA,MAAM,EAAE;IACV,CAAC,EAAC;MACAA,MAAM,EAAE;IACV,CAAC,CAAC;IACFC,IAAI,EAAE;EACR,CAAC,CAAC;EACFC,UAAU,EAAE,EAAE;EACdC,cAAc,EAAE,KAAK;EACrBC,WAAW,EAAE,KAAK;EAClBC,YAAY,EAAE;AAChB,CAAC;AAED,OAAO,IAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,IAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,IAAMC,gBAAgB,GAAG,kBAAkB;AAElD,OAAO,IAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,IAAMC,mBAAmB,GAAG,qBAAqB;AACxD,OAAO,IAAMC,mBAAmB,GAAG,qBAAqB;AAExD,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAIC,IAAS;EAAA,OAAI;IACnCC,IAAI,EAAER,gBAAgB;IACtBO,IAAI,EAAJA;EACF,CAAC;AAAA,CAAC;AAEF,OAAO,IAAME,SAAS,GAAG,SAAZA,SAASA,CAAIF,IAAQ;EAAA,OAAI;IACpCtB,EAAE,EAAEsB,IAAI,CAACtB,EAAE;IACXC,IAAI,EAAE;MACJD,EAAE,EAAE,CAAC;MACLE,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAEmB,IAAI,CAACnB,KAAK;IACjBC,QAAQ,EAAEkB,IAAI,CAAClB,QAAQ;IACvBC,WAAW,EAAEiB,IAAI,CAACG,WAAW;IAC7BlB,KAAK,EAAEe,IAAI,CAACf,KAAK;IACjBC,OAAO,EAAEc,IAAI,CAACI,OAAO;IACrBhB,IAAI,EAAE;EACR,CAAC;AAAA,CAAC;AAEF,IAAMiB,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAuC;EAAA,IAAnCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC/B,YAAY;EAAA,IAAEkC,MAAU,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7C,QAAOC,MAAM,CAACT,IAAI;IAChB,KAAKR,gBAAgB;MACnB,OAAAkB,aAAA,CAAAA,aAAA,KACKL,KAAK;QACRhB,cAAc,EAAE,IAAI;QACpBC,WAAW,EAAE,KAAK;QAClBC,YAAY,EAAE;MAAI;IAEtB,KAAKE,gBAAgB;MACnB,OAAAiB,aAAA,CAAAA,aAAA,KACKL,KAAK;QACR7B,SAAS,GAAGyB,SAAS,CAACQ,MAAM,CAACV,IAAI,CAAC,EAAAY,MAAA,CAAAC,kBAAA,CAAKP,KAAK,CAAC7B,SAAS,EAAC;QACvDa,cAAc,EAAE,KAAK;QACrBC,WAAW,EAAE;MAAI;IAErB,KAAKI,gBAAgB;MACnB,OAAAgB,aAAA,CAAAA,aAAA,KACKL,KAAK;QACRhB,cAAc,EAAE,KAAK;QACrBE,YAAY,EAAEkB,MAAM,CAACI;MAAK;IAE9B;MACE,OAAOR,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}